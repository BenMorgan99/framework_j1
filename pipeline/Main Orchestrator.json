{
	"name": "Main Orchestrator",
	"properties": {
		"activities": [
			{
				"name": "Set EntityName",
				"description": "Start the pipeline by defining an entity name.  This way, the metadata can be accessed in the metadata database.",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "EntityName",
					"value": {
						"value": "@pipeline().parameters.entityName",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Get SourceSystem data",
				"description": "This activity will query the sourceSystem table.",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Set EntityName",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT * \nFROM sourceSystem \nWHERE sourceEntityName = '@{pipeline().parameters.entityName}'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "MetaData_Dataset",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Ingest Entities",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup Entities to Ingest",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup Entities to Ingest').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "RAW",
							"type": "DatabricksNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/Users/sjp@data-ai.uk/framework_j1/src/notebooks/RAW",
								"baseParameters": {
									"entityName": {
										"value": "@string(item()['entityName'])",
										"type": "Expression"
									},
									"entitySourceQuery": {
										"value": "@string(item()['entitySourceQuery'])",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "Framework Databricks",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Set File Path",
							"description": "Set the location of the ingested file as a parameter.",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "RAW",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "fileLocation",
								"value": {
									"value": "@activity('RAW').output.runOutput",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Execute Transformation Pipeline",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "Set File Path",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "Transform",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true
							}
						}
					]
				}
			},
			{
				"name": "Lookup Entities to Ingest",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Get SourceSystem data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "--First create varaiable to store sourceEntityID:\nDECLARE @sourceEntityID INT;\n\n-- Save the sourceEntityID to variable:\nSELECT @sourceEntityID = sourceEntityID\nFROM sourceSystem\nWHERE sourceEntityName = '@{pipeline().parameters.entityName}';\n\n--SELECT from sourceEntity\nSELECT * FROM sourceEntity\nWHERE @sourceEntityID = @sourceEntityID",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "MetaData_Dataset",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			}
		],
		"parameters": {
			"entityName": {
				"type": "String"
			}
		},
		"variables": {
			"EntityName": {
				"type": "String"
			},
			"fileLocation": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2025-02-03T14:40:35Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}